import { TabWidget, Time, Date, Button, VerticalBox, HorizontalBox, CheckBox, LineEdit } from "std-widgets.slint";
import { CustomButton } from "custom-button.slint";
import { StaticEventModal } from "events/static-events.modal.slint";
import { DynamicEventsModal } from "events/dynamic-events.modal.slint";
import { SlintSlot } from "events/suggest-dynamics-list.slint";

component ModalWindow inherits Rectangle {
    height: 100%;
    width: 100%;
    background: #f8fafc;
    border-color: #e2e8f0;
    border-width: 1px;
    border-radius: 12px;
    padding: 0px;

    drop-shadow-color: #2E3445;
    drop-shadow-blur: 130px;

    in property <bool> is_loading: false;
    in property <string> error: "";
    in property <[SlintSlot]> slots;
    in property <Date> dynamic_range_start;
    in property <Date> dynamic_range_end;

    in property <Date> selected_date;

    callback create_static_event(name: string, description: string, start_date: Date, end_date: Date, start_time: Time, end_time: Time);
    callback start_slots_searching(name: string, description: string, duration: Time, priority: int, weekdays: [int], range_start: Date, range_end: Date);
    callback create-dynamic-event(slot_id: string);
    callback request-close();

    TabWidget {
        width: 100%;
        height: 100%;
        padding: 0;
        Tab {
            title: "Static";
            padding: 0;
            StaticEventModal {
                selected_date: selected_date;
                create_static_event(name, description, start_date, end_date, start_time, end_time) => {
                    root.create_static_event(name, description, start_date, end_date, start_time, end_time);
                }
                request-close() => {
                    root.request-close();
                }
            }
        }

        Tab {
            title: "Dynamic";
            padding: 0;
            DynamicEventsModal {
                slots: root.slots;
                error: root.error;
                is_loading: root.is_loading;
                dynamic_range_end: root.dynamic_range_end;
                dynamic_range_start: root.dynamic_range_start;
                start_slots_searching(name, description, duration, priority, weekdays, range_start, range_end) => {
                    root.start_slots_searching(name, description, duration, priority, weekdays, range_start, range_end);
                }
                create-dynamic-event(slot-id) => {
                    create-dynamic-event(slot-id);
                }
                request-close => {
                    root.request-close();
                }
            }
        }
    }
}

export { ModalWindow }
